#!/usr/bin/env python3
from dynamic_reconfigure.parameter_generator_catkin import *
import numpy as np

gen = ParameterGenerator()

gen.add("nx",    int_t,    0, "# states", 3,  3, 3)
gen.add("nu",    int_t,    0, "# inputs", 3,  3, 3)
gen.add("T",    int_t,    0, "horizon length", 15,  1, 50)
gen.add("frequency",    double_t,    0, "controller frequency", 10.0,  1.0, 50.0)
gen.add("lu",    double_t,    0, "lower bound on pos inputs", -0.1,  -1.0, 1.0)
gen.add("hu",    double_t,    0, "upper bound on pos inputs", 0.1,  -1.0, 1.0)
gen.add("lu_psi",    double_t,    0, "lower bound on pos inputs", -1.0,  -np.pi, np.pi)
gen.add("hu_psi",    double_t,    0, "upper bound on pos inputs", 1.0,  -np.pi, np.pi)
gen.add("penalty_term_cons",    double_t,    0, "terminal cost penalty", 1e4,  0.0, 1e10)
gen.add("delay_compensation_steps",    int_t,    0, "delay compensation steps", 2,  0, 50)
gen.add("outlier_detection_threshold",    double_t,    0, "max euclidean distance [m] between old and new target pose", 0.35,  0.0, 2.0)
gen.add("gripper_spacing_closed_threshold",    double_t,    0, "min gripper spacing distance [m] to trigger the gripper closed state", 0.065,  0.0, 0.08)
gen.add("termination_activate_heuristics",    bool_t,    0, "use any termination heuristic", False)
gen.add("termination_use_cost",    bool_t,    0, "use cost threshold for the termination heuristic", False)
gen.add("termination_cost_thr",    double_t,    0, "cost threshold for the termination heuristic", 0.005,  0.0, 1.0)
gen.add("termination_use_time",    bool_t,    0, "use time threshold for the termination heuristic", True)
gen.add("termination_time_thr",    double_t,    0, "relative improvement threshold for the termination heuristic", 25.0,  0.0, 60.0)
gen.add("termination_use_rel_impr",    bool_t,    0, "use cost threshold for the termination heuristic", False)
gen.add("termination_rel_impr_thr",    double_t,    0, "relative improvement threshold for the termination heuristic", 0.05,  0.0, 1.0)
gen.add("termination_rel_impr_thr_max_cost",    double_t,    0, "relative improvement threshold for the termination heuristic", 1e-2,  0.0, 1.0)
gen.add("model_type",    str_t,    0, "model type", "discrete")

PACKAGE = "l2c"
exit(gen.generate(PACKAGE, "controller_param_server", "Controller"))
